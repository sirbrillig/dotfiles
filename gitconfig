[user]
	email = payton@foolord.com
	name = Payton Swick
[credential]
	username = sirbrillig
[color]
	ui = true
[push]
	default = simple
[alias]
  pick = cherry-pick
  cm = commit
  co = checkout
  st = status
  pushnew = push -u origin HEAD
  cpull = "!f() { git checkout $1 && git pull; }; f"
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  last = log --oneline --decorate -10
  undo = reset HEAD~1 --mixed
  bclean = "!f() { git branch --merged ${1-master} | grep -v ${1-master}$ | xargs -n1 git branch -d; }; f"
  bnew = checkout -b
  backup-create = "!f() { git branch -f backup-$(git rev-parse --abbrev-ref HEAD) && echo 'Backup created. Use git backup-restore to restore.'; }; f"
  backup-restore = "!f() { echo 'Are you sure you want to overwrite the current branch with the latest backup? This cannot be undone!'; select result in Yes No; do [[ $result == "Yes" ]] && git reset --hard backup-$(git rev-parse --abbrev-ref HEAD) && echo 'Backup restored.'; break; done; }; f"
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[merge]
	tool = nvim-only
[mergetool "nvim-only"]
	cmd = nvim $MERGED
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[pull]
	rebase = false
